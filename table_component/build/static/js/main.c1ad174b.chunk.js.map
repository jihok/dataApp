{"version":3,"sources":["Table.tsx","index.tsx"],"names":["withStreamlitConnection","args","theme","muiTheme","disabled","createTheme","palette","mode","base","useEffect","Streamlit","setFrameHeight","cols","Array","df","columns","fill","map","_x","i","field","headerName","getCell","content","console","log","rows","row","id","j","value","toLocaleString","ThemeProvider","Box","sx","height","width","DataGrid","pageSize","rowsPerPageOptions","pageSizeOpts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAoEeA,eA1DD,SAAC,GAA+C,IAAD,EAA5CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,MACfC,GADqD,EAA/BC,SACXC,YAAY,CAC3BC,QAAS,CACPC,KAAI,iBAAGL,QAAH,IAAGA,OAAH,EAAGA,EAAOM,YAAV,QAAkB,YAI1BC,qBAAU,WACRC,IAAUC,oBAGZ,IAAMC,EAAqB,IAAIC,MAAMZ,EAAKa,GAAGC,SAC1CC,KAAK,MACLC,KAAI,SAACC,EAAIC,GAAL,MAAY,CACfC,MAAM,MAAD,OAAQD,GACbE,WAAYpB,EAAKa,GAAGQ,QAAQ,EAAGH,GAAGI,YAGtCC,QAAQC,IAAIxB,EAAKa,IAEjB,IAAMY,EAAO,IAAIb,MAAMZ,EAAKa,GAAGY,KAAO,GAAGV,KAAK,MAAMC,KAAI,SAACC,EAAIC,GAE3D,IADA,IAAIQ,EAAW,CAAEC,GAAIT,GACZU,EAAI,EAAGA,EAAI5B,EAAKa,GAAGC,QAASc,IAAK,CACxC,IAAMC,EAAQ7B,EAAKa,GAAGQ,QAAQH,EAAI,EAAGU,GAAGN,QAUxCC,QAAQC,IAAIxB,EAAKa,GAAGQ,QAAQH,EAAI,EAAGU,IAGjCF,EAAI,MAAD,OAAOE,IADS,kBAAVC,EACQA,EAAMC,iBAEND,EAGrB,OAAOH,KAGT,OACE,kBAACK,EAAA,EAAD,CAAe9B,MAAOC,GACpB,kBAAC8B,EAAA,EAAD,CAAKC,GAAI,CAAEC,OAAQ,IAAKC,MAAO,SAC7B,kBAACC,EAAA,EAAD,CACEX,KAAMA,EACNX,QAASH,EACT0B,SAAUrC,EAAKqC,UAAY,GAC3BC,mBAAoBtC,EAAKuC,cAAgB,CAAC,WCzDpDC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.c1ad174b.chunk.js","sourcesContent":["import {\n  ComponentProps,\n  Streamlit,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { useEffect } from \"react\"\nimport { Box, createTheme, ThemeProvider } from \"@mui/material\"\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\"\nimport format from \"date-fns/format\"\n\nconst Table = ({ args, theme, disabled }: ComponentProps) => {\n  const muiTheme = createTheme({\n    palette: {\n      mode: (theme?.base ?? \"light\") as any,\n    },\n  })\n\n  useEffect(() => {\n    Streamlit.setFrameHeight()\n  })\n\n  const cols: GridColDef[] = new Array(args.df.columns)\n    .fill(null)\n    .map((_x, i) => ({\n      field: `col${i}`,\n      headerName: args.df.getCell(0, i).content,\n      // width: 200, // TODO\n    }))\n  console.log(args.df)\n  // df.rows includes the header rows\n  const rows = new Array(args.df.rows - 1).fill(null).map((_x, i) => {\n    let row: any = { id: i }\n    for (let j = 0; j < args.df.columns; j++) {\n      const value = args.df.getCell(i + 1, j).content\n      // if (args.df.getCell(i + 1, j).type === \"index\") {\n      //   console.log(\n      //     args.df,\n      //     args.df.dataTable.toArray(),\n      //     args.df.columnsTable.toArray(),\n      //     args.df.getCell(i + 1, j),\n      //     value\n      //   )\n      // }\n      console.log(args.df.getCell(i + 1, j))\n\n      if (typeof value === \"number\") {\n        row[`col${j}`] = value.toLocaleString()\n      } else {\n        row[`col${j}`] = value\n      }\n    }\n    return row\n  })\n\n  return (\n    <ThemeProvider theme={muiTheme}>\n      <Box sx={{ height: 600, width: \"100%\" }}>\n        <DataGrid\n          rows={rows}\n          columns={cols}\n          pageSize={args.pageSize || 10}\n          rowsPerPageOptions={args.pageSizeOpts || [10]}\n        />\n      </Box>\n    </ThemeProvider>\n  )\n}\n\nexport default withStreamlitConnection(Table)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport Table from \"./Table\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Table />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}
{"version":3,"sources":["Select.tsx","index.tsx"],"names":["withStreamlitConnection","args","theme","muiTheme","disabled","createTheme","palette","mode","base","useState","defaultEmpty","options","value","setValue","useEffect","Streamlit","setFrameHeight","setComponentValue","ThemeProvider","Box","sx","minWidth","paddingTop","height","FormControl","fullWidth","InputLabel","id","native","label","onChange","event","target","map","x","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSA6DeA,eA9CA,SAAC,GAA+C,IAAD,IAA5CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,MAChBC,GADsD,EAA/BC,SACZC,YAAY,CAC3BC,QAAS,CACPC,KAAI,iBAAGL,QAAH,IAAGA,OAAH,EAAGA,EAAOM,YAAV,QAAkB,YAG1B,EAA0BC,mBAASR,EAAKS,aAAe,GAAKT,EAAKU,QAAQ,IAAzE,mBAAOC,EAAP,KAAcC,EAAd,KAUA,OARAC,qBAAU,WACRC,IAAUC,oBAGZF,qBAAU,WACRC,IAAUE,kBAAkBL,KAC3B,CAACA,IAGF,kBAACM,EAAA,EAAD,CAAehB,MAAOC,GACpB,kBAACgB,EAAA,EAAD,CAAKC,GAAI,CAAEC,SAAU,IAAKC,WAAY,EAAGC,OAAQ,MAC/C,kBAACC,EAAA,EAAD,CAAaC,WAAS,GACnBxB,EAAI,OACH,kBAACyB,EAAA,EAAD,CAAYC,GAAG,4BACZ1B,EAAI,OAGT,kBAAC,IAAD,CACE2B,QAAM,EACNhB,MAAOA,EACPiB,MAAO5B,EAAI,MACX6B,SAAU,SAACC,GACTlB,EAASkB,EAAMC,OAAOpB,SAGvBX,EAAKS,cAAgB,iCARxB,UASGT,EAAI,eATP,aASG,EAAiBgC,KAAI,SAACC,GAAD,OACpB,4BAAQtB,MAAOsB,EAAGC,IAAKD,GACpBA,aC/CjBE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.2dbcda06.chunk.js","sourcesContent":["import {\n  ComponentProps,\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ComponentType, ReactNode, useEffect, useState } from \"react\"\nimport {\n  Select as MuiSelect,\n  FormControl,\n  Box,\n  InputLabel,\n} from \"@mui/material\"\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\"\n\nconst Select = ({ args, theme, disabled }: ComponentProps) => {\n  const muiTheme = createTheme({\n    palette: {\n      mode: (theme?.base ?? \"light\") as any,\n    },\n  })\n  const [value, setValue] = useState(args.defaultEmpty ? \"\" : args.options[0])\n\n  useEffect(() => {\n    Streamlit.setFrameHeight()\n  })\n\n  useEffect(() => {\n    Streamlit.setComponentValue(value)\n  }, [value])\n\n  return (\n    <ThemeProvider theme={muiTheme}>\n      <Box sx={{ minWidth: 120, paddingTop: 1, height: 100 }}>\n        <FormControl fullWidth>\n          {args[\"label\"] && (\n            <InputLabel id=\"demo-simple-select-label\">\n              {args[\"label\"]}\n            </InputLabel>\n          )}\n          <MuiSelect\n            native\n            value={value}\n            label={args[\"label\"]}\n            onChange={(event) => {\n              setValue(event.target.value)\n            }}\n          >\n            {args.defaultEmpty && <option></option>}\n            {args[\"options\"]?.map((x: string) => (\n              <option value={x} key={x}>\n                {x}\n              </option>\n            ))}\n          </MuiSelect>\n        </FormControl>\n      </Box>\n    </ThemeProvider>\n  )\n}\n\nexport default withStreamlitConnection(Select)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport Select from \"./Select\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Select />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}